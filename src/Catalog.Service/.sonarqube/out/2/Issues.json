{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.11.0.0",
        "fileVersion": "4.11.0-3.24510.3 (cfe3bd0a)",
        "semanticVersion": "4.11.0"
      },
      "results": [
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Common/Exceptions/EntityNotFoundException.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 14,
                  "endLine": 3,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Common/Exceptions/EntityNotFoundException.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 8,
                  "endLine": 3,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Common/Exceptions/EntityNotFoundException.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 8,
                  "endLine": 3,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'EntityNotFoundException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'EntityNotFoundException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Categories/Queries/ListCategories/ListCategories.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 32,
                  "endLine": 11,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1031",
          "level": "note",
          "message": "Modify 'IsValidUrl' to catch a more specific allowed exception type, or rethrow the exception",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Common/Extensions/StringExtensions.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 9,
                  "endLine": 16,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'url'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Common/Extensions/StringExtensions.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 17,
                  "endLine": 12,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Products/Queries/ListProducts/ListCategories.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 30,
                  "endLine": 18,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1062",
          "level": "note",
          "message": "In externally visible method 'Task<Product[]> ListProductsQueryHandler.Handle(ListProductsQuery request, CancellationToken cancellationToken)', validate parameter 'request' is non-null before using it. If appropriate, throw an 'ArgumentNullException' when the argument is 'null'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Products/Queries/ListProducts/ListCategories.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 13,
                  "endLine": 15,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Outbox/Commands/SendOutboxEvents.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 28,
                  "endLine": 28,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Outbox/Commands/SendOutboxEvents.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 28,
                  "endLine": 14,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Outbox/Commands/SendOutboxEvents.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 19,
                  "endLine": 19,
                  "endColumn": 101
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Outbox/Commands/SendOutboxEvents.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 19,
                  "endLine": 21,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Outbox/Commands/SendOutboxEvents.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 28,
                  "endLine": 22,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Products/Queries/GetProductById/GetProductById.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 29,
                  "endLine": 11,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1062",
          "level": "note",
          "message": "In externally visible method 'Task<Product> GetProductByIdQueryHandler.Handle(GetProductByIdQuery request, CancellationToken cancellationToken)', validate parameter 'request' is non-null before using it. If appropriate, throw an 'ArgumentNullException' when the argument is 'null'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Products/Queries/GetProductById/GetProductById.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 44,
                  "endLine": 11,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Outbox/Commands/SendOutboxEvents.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 15,
                  "endLine": 38,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Categories/Queries/GetCategoryById/GetCategoryById.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 30,
                  "endLine": 11,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1062",
          "level": "note",
          "message": "In externally visible method 'Task<Category> GetCategoryByIdQueryHandler.Handle(GetCategoryByIdQuery request, CancellationToken cancellationToken)', validate parameter 'request' is non-null before using it. If appropriate, throw an 'ArgumentNullException' when the argument is 'null'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Categories/Queries/GetCategoryById/GetCategoryById.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Products/Commands/DeleteCategory/DeleteProduct.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 28,
                  "endLine": 9,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Products/Commands/DeleteCategory/DeleteProduct.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 15,
                  "endLine": 14,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1062",
          "level": "note",
          "message": "In externally visible method 'Task DeleteProductCommandHandler.Handle(DeleteProductCommand request, CancellationToken cancellationToken)', validate parameter 'request' is non-null before using it. If appropriate, throw an 'ArgumentNullException' when the argument is 'null'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Products/Commands/DeleteCategory/DeleteProduct.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 43,
                  "endLine": 9,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Common/Behaviors/ValidationBehavior.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 43,
                  "endLine": 23,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Common/Behaviors/ValidationBehavior.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 22,
                  "endLine": 34,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1062",
          "level": "note",
          "message": "In externally visible method 'Task<TResponse> ValidationBehavior<TRequest, TResponse>.Handle(TRequest request, RequestHandlerDelegate<TResponse> next, CancellationToken cancellationToken)', validate parameter 'next' is non-null before using it. If appropriate, throw an 'ArgumentNullException' when the argument is 'null'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Common/Behaviors/ValidationBehavior.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 22,
                  "endLine": 34,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Products/Commands/CreateProduct/CreateProduct.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 30,
                  "endLine": 19,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Products/Commands/CreateProduct/CreateProduct.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 24,
                  "endLine": 33,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1062",
          "level": "note",
          "message": "In externally visible method 'Task<Product> CreateProductCommandHandler.Handle(CreateProductCommand request, CancellationToken cancellationToken)', validate parameter 'request' is non-null before using it. If appropriate, throw an 'ArgumentNullException' when the argument is 'null'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Products/Commands/CreateProduct/CreateProduct.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 53,
                  "endLine": 19,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Products/Commands/UpdateProduct/UpdateProduct.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 28,
                  "endLine": 18,
                  "endColumn": 87
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Products/Commands/UpdateProduct/UpdateProduct.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 34,
                  "endLine": 36,
                  "endColumn": 101
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Products/Commands/UpdateProduct/UpdateProduct.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 15,
                  "endLine": 51,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1062",
          "level": "note",
          "message": "In externally visible method 'Task UpdateProductCommandHandler.Handle(UpdateProductCommand request, CancellationToken cancellationToken)', validate parameter 'request' is non-null before using it. If appropriate, throw an 'ArgumentNullException' when the argument is 'null'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Products/Commands/UpdateProduct/UpdateProduct.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 50,
                  "endLine": 18,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Categories/Commands/DeleteCategory/DeleteCategory.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 28,
                  "endLine": 9,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Categories/Commands/DeleteCategory/DeleteCategory.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 41,
                  "endLine": 14,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Categories/Commands/DeleteCategory/DeleteCategory.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 15,
                  "endLine": 17,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1062",
          "level": "note",
          "message": "In externally visible method 'Task DeleteCategoryCommandHandler.Handle(DeleteCategoryCommand request, CancellationToken cancellationToken)', validate parameter 'request' is non-null before using it. If appropriate, throw an 'ArgumentNullException' when the argument is 'null'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Categories/Commands/DeleteCategory/DeleteCategory.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 43,
                  "endLine": 9,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Categories/Commands/UpdateCategory/UpdateCategory.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 28,
                  "endLine": 9,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Categories/Commands/UpdateCategory/UpdateCategory.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 15,
                  "endLine": 24,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1062",
          "level": "note",
          "message": "In externally visible method 'Task UpdateCategoryCommandHandler.Handle(UpdateCategoryCommand request, CancellationToken cancellationToken)', validate parameter 'request' is non-null before using it. If appropriate, throw an 'ArgumentNullException' when the argument is 'null'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Categories/Commands/UpdateCategory/UpdateCategory.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 43,
                  "endLine": 9,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Categories/Commands/CreateCategory/CreateCategory.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 36,
                  "endLine": 14,
                  "endColumn": 101
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2007",
          "level": "note",
          "message": "Consider calling ConfigureAwait on the awaited task",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Categories/Commands/CreateCategory/CreateCategory.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1062",
          "level": "note",
          "message": "In externally visible method 'Task<Category> CreateCategoryCommandHandler.Handle(CreateCategoryCommand request, CancellationToken cancellationToken)', validate parameter 'request' is non-null before using it. If appropriate, throw an 'ArgumentNullException' when the argument is 'null'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Categories/Commands/CreateCategory/CreateCategory.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 13,
                  "endLine": 12,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1852",
          "level": "note",
          "message": "Type 'CreateProductCommandValidator' can be sealed because it has no subtypes in its containing assembly and is not externally visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Products/Commands/CreateProduct/CreateProductCommandValidator.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1852",
          "level": "note",
          "message": "Type 'UpdateProductCommandValidator' can be sealed because it has no subtypes in its containing assembly and is not externally visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Products/Commands/UpdateProduct/UpdateProductCommandValidator.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1852",
          "level": "note",
          "message": "Type 'UpdateCategoryCommandValidator' can be sealed because it has no subtypes in its containing assembly and is not externally visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Categories/Commands/UpdateCategory/UpdateCategoryCommandValidator.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1852",
          "level": "note",
          "message": "Type 'UpdateCategoryCommandValidator' can be sealed because it has no subtypes in its containing assembly and is not externally visible",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///mnt/c/Users/Dzianis_Lukayenka/Documents/Learn_Test/NETMentoringProgramAdvanced/src/Catalog.Service/ApplicationCore/Categories/Commands/CreateCategory/CreateCategoryCommandValidator.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1031": {
          "id": "CA1031",
          "shortDescription": "Do not catch general exception types",
          "fullDescription": "A general exception such as System.Exception or System.SystemException or a disallowed exception type is caught in a catch statement, or a general catch clause is used. General and disallowed exceptions should not be caught.",
          "defaultLevel": "warning",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1031",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": false,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1062": {
          "id": "CA1062",
          "shortDescription": "Validate arguments of public methods",
          "fullDescription": "An externally visible method dereferences one of its reference arguments without verifying whether that argument is 'null' ('Nothing' in Visual Basic). All reference arguments that are passed to externally visible methods should be checked against 'null'. If appropriate, throw an 'ArgumentNullException' when the argument is 'null'. If the method is designed to be called only by known assemblies, you should make the method internal.",
          "defaultLevel": "warning",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1062",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": false,
            "tags": [
              "PortedFromFxCop",
              "Dataflow",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1852": {
          "id": "CA1852",
          "shortDescription": "Seal internal types",
          "fullDescription": "When a type is not accessible outside its assembly and has no subtypes within its containing assembly, it can be safely sealed. Sealing types can improve performance.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1852",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode",
              "CompilationEnd"
            ]
          }
        },
        "CA2007": {
          "id": "CA2007",
          "shortDescription": "Consider calling ConfigureAwait on the awaited task",
          "fullDescription": "When an asynchronous method awaits a Task directly, continuation occurs in the same thread that created the task. Consider calling Task.ConfigureAwait(Boolean) to signal your intention for continuation. Call ConfigureAwait(false) on the task to schedule continuations to the thread pool, thereby avoiding a deadlock on the UI thread. Passing false is a good option for app-independent libraries. Calling ConfigureAwait(true) on the task has the same behavior as not explicitly calling ConfigureAwait. By explicitly calling this method, you're letting readers know you intentionally want to perform the continuation on the original synchronization context.",
          "defaultLevel": "warning",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2007",
          "properties": {
            "category": "Reliability",
            "isEnabledByDefault": false,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "If a local variable is declared but not used, it is dead code and should be removed. Doing so will improve maintainability because developers will not wonder what the variable is used for.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3925": {
          "id": "S3925",
          "shortDescription": "\"ISerializable\" should be implemented correctly",
          "fullDescription": "The ISerializable interface is the mechanism to control the type serialization process. If not implemented correctly this could result in an invalid serialization and hard to detect bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3925",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}